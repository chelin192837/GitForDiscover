/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef IOSRDKSWIG_WRAP_H
#define IOSRDKSWIG_WRAP_H


#ifdef __cplusplus
extern "C" {
#endif

@class FSFileReadCallback;
@class FSPauseCallback;
@class FSAnnotIconProviderCallback;
@class FSSignatureCallback;
@class FSSealImage;
@class FSSeal;
typedef void (*FS_CALLBACK_TIMER)(int timer);

void* _wrap_FSNotifier_init(id obj);
void _wrap_FSNotifier_OnOutOfMemory(void* imarg1);
void _wrap_delete_FSNotifier(void* imarg1);
int _wrap_FSLibrary_init(NSString * imarg1, NSString * imarg2);
int _wrap_FSLibrary_reinit();
void _wrap_FSLibrary_release();
NSString* _wrap_FSLibrary_getVersion();
int _wrap_FSLibrary_getModuleRight(int imarg1);
BOOL _wrap_FSLibrary_setAnnotIconProvider(FSAnnotIconProviderCallback* imarg1);
BOOL _wrap_FSLibrary_setNotifier(void* imarg1);
BOOL _wrap_FSLibrary_setActionHandler(id imarg1);
BOOL _wrap_FSLibrary_registerDefaultSignatureHandler();
int _wrap_FSLibrary_addExtFont(NSString * filepath);
void* _wrap_new_FSLibrary();
void _wrap_delete_FSLibrary(void* imarg1);
void _wrap_FSPointF_set(void* imarg1, float imarg2, float imarg3);
void _wrap_FSPointF_x_set(void* imarg1, float imarg2);
float _wrap_FSPointF_x_get(void* imarg1);
void _wrap_FSPointF_y_set(void* imarg1, float imarg2);
float _wrap_FSPointF_y_get(void* imarg1);
void* _wrap_new_FSPointF();
void _wrap_delete_FSPointF(void* imarg1);
void _wrap_FSRectF_set(void* imarg1, float imarg2, float imarg3, float imarg4, float imarg5);
void _wrap_FSRectF_left_set(void* imarg1, float imarg2);
float _wrap_FSRectF_left_get(void* imarg1);
void _wrap_FSRectF_bottom_set(void* imarg1, float imarg2);
float _wrap_FSRectF_bottom_get(void* imarg1);
void _wrap_FSRectF_right_set(void* imarg1, float imarg2);
float _wrap_FSRectF_right_get(void* imarg1);
void _wrap_FSRectF_top_set(void* imarg1, float imarg2);
float _wrap_FSRectF_top_get(void* imarg1);
void* _wrap_new_FSRectF();
void _wrap_delete_FSRectF(void* imarg1);
void _wrap_FSRectI_set(void* imarg1, int imarg2, int imarg3, int imarg4, int imarg5);
void _wrap_FSRectI_left_set(void* imarg1, int imarg2);
int _wrap_FSRectI_left_get(void* imarg1);
void _wrap_FSRectI_top_set(void* imarg1, int imarg2);
int _wrap_FSRectI_top_get(void* imarg1);
void _wrap_FSRectI_right_set(void* imarg1, int imarg2);
int _wrap_FSRectI_right_get(void* imarg1);
void _wrap_FSRectI_bottom_set(void* imarg1, int imarg2);
int _wrap_FSRectI_bottom_get(void* imarg1);
void* _wrap_new_FSRectI();
void _wrap_delete_FSRectI(void* imarg1);
void _wrap_FSMatrix_set(void* imarg1, float imarg2, float imarg3, float imarg4, float imarg5, float imarg6, float imarg7);
void* _wrap_FSMatrix_getReverse(void* imarg1);
void* _wrap_FSMatrix_transform(void* imarg1, void* imarg2);
void* _wrap_FSMatrix_transformRect(void* imarg1, void* imarg2);
void _wrap_FSMatrix_a_set(void* imarg1, float imarg2);
float _wrap_FSMatrix_a_get(void* imarg1);
void _wrap_FSMatrix_b_set(void* imarg1, float imarg2);
float _wrap_FSMatrix_b_get(void* imarg1);
void _wrap_FSMatrix_c_set(void* imarg1, float imarg2);
float _wrap_FSMatrix_c_get(void* imarg1);
void _wrap_FSMatrix_d_set(void* imarg1, float imarg2);
float _wrap_FSMatrix_d_get(void* imarg1);
void _wrap_FSMatrix_e_set(void* imarg1, float imarg2);
float _wrap_FSMatrix_e_get(void* imarg1);
void _wrap_FSMatrix_f_set(void* imarg1, float imarg2);
float _wrap_FSMatrix_f_get(void* imarg1);
void* _wrap_new_FSMatrix();
void _wrap_delete_FSMatrix(void* imarg1);
void _wrap_FSDateTime_set(void* imarg1, unsigned short imarg2, unsigned short imarg3, unsigned short imarg4, unsigned short imarg5, unsigned short imarg6, unsigned short imarg7, unsigned short imarg8, short imarg9, unsigned short imarg10);
void _wrap_FSDateTime_year_set(void* imarg1, unsigned short imarg2);
unsigned short _wrap_FSDateTime_year_get(void* imarg1);
void _wrap_FSDateTime_month_set(void* imarg1, unsigned short imarg2);
unsigned short _wrap_FSDateTime_month_get(void* imarg1);
void _wrap_FSDateTime_day_set(void* imarg1, unsigned short imarg2);
unsigned short _wrap_FSDateTime_day_get(void* imarg1);
void _wrap_FSDateTime_hour_set(void* imarg1, unsigned short imarg2);
unsigned short _wrap_FSDateTime_hour_get(void* imarg1);
void _wrap_FSDateTime_minute_set(void* imarg1, unsigned short imarg2);
unsigned short _wrap_FSDateTime_minute_get(void* imarg1);
void _wrap_FSDateTime_second_set(void* imarg1, unsigned short imarg2);
unsigned short _wrap_FSDateTime_second_get(void* imarg1);
void _wrap_FSDateTime_millisecond_set(void* imarg1, unsigned short imarg2);
unsigned short _wrap_FSDateTime_millisecond_get(void* imarg1);
void _wrap_FSDateTime_UTHourOffset_set(void* imarg1, short imarg2);
short _wrap_FSDateTime_UTHourOffset_get(void* imarg1);
void _wrap_FSDateTime_UTMinuteOffset_set(void* imarg1, unsigned short imarg2);
unsigned short _wrap_FSDateTime_UTMinuteOffset_get(void* imarg1);
void* _wrap_new_FSDateTime();
void _wrap_delete_FSDateTime(void* imarg1);
unsigned long long _wrap_FSFileRead_getSize(void* imarg1);
BOOL _wrap_FSFileRead_readBlock(void* imarg1, void * imarg2, unsigned long long imarg3, unsigned long long imarg4);
void _wrap_delete_FSFileRead(void* imarg1);
BOOL _wrap_FSPause_needPauseNow(void* imarg1);
void _wrap_delete_FSPause(void* imarg1);
void _wrap_FSWrapperData_set(void* imarg1, int imarg2, NSString * imarg3, NSString * imarg4, NSString * imarg5, NSString * imarg6);
void _wrap_FSWrapperData_version_set(void* imarg1, int imarg2);
int _wrap_FSWrapperData_version_get(void* imarg1);
void _wrap_FSWrapperData_type_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSWrapperData_type_get(void* imarg1);
void _wrap_FSWrapperData_appID_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSWrapperData_appID_get(void* imarg1);
void _wrap_FSWrapperData_uri_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSWrapperData_uri_get(void* imarg1);
void _wrap_FSWrapperData_description_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSWrapperData_description_get(void* imarg1);
void* _wrap_new_FSWrapperData();
void _wrap_delete_FSWrapperData(void* imarg1);
void* _wrap_FSDestination_createXYZ(void* imarg1, float imarg2, float imarg3, float imarg4);
void* _wrap_FSDestination_createFitPage(void* imarg1);
void* _wrap_FSDestination_createFitHorz(void* imarg1, float imarg2);
void* _wrap_FSDestination_createFitVert(void* imarg1, float imarg2);
void* _wrap_FSDestination_createFitRect(void* imarg1, float imarg2, float imarg3, float imarg4, float imarg5);
void* _wrap_FSDestination_createFitBBox(void* imarg1);
void* _wrap_FSDestination_createFitBHorz(void* imarg1, float imarg2);
void* _wrap_FSDestination_createFitBVert(void* imarg1, float imarg2);
int _wrap_FSDestination_getPageIndex(void* imarg1);
int _wrap_FSDestination_getZoomMode(void* imarg1);
float _wrap_FSDestination_getLeft(void* imarg1);
float _wrap_FSDestination_getTop(void* imarg1);
float _wrap_FSDestination_getRight(void* imarg1);
float _wrap_FSDestination_getBottom(void* imarg1);
float _wrap_FSDestination_getZoomFactor(void* imarg1);
void _wrap_delete_FSDestination(void* imarg1);
void _wrap_delete_FSAction(void* imarg1);
void* _wrap_FSAction_create(void* imarg1, int imarg2);
void _wrap_FSAction_setSubAction(void* imarg1, int imarg2, void* imarg3);
BOOL _wrap_FSAction_insertSubAction(void* imarg1, int imarg2, void* imarg3);
BOOL _wrap_FSAction_removeSubAction(void* imarg1, int imarg2);
BOOL _wrap_FSAction_removeAllSubActions(void* imarg1);
int _wrap_FSAction_getType(void* imarg1);
int _wrap_FSAction_getSubActionCount(void* imarg1);
void* _wrap_FSAction_getSubAction(void* imarg1, int imarg2);
void _wrap_delete_FSGotoAction(void* imarg1);
void* _wrap_FSGotoAction_getDestination(void* imarg1);
void _wrap_FSGotoAction_setDestination(void* imarg1, void* imarg2);
void _wrap_delete_FSURIAction(void* imarg1);
NSString * _wrap_FSURIAction_getURI(void* imarg1);
void _wrap_FSURIAction_setURI(void* imarg1, NSString* imarg2);
void _wrap_FSURIAction_setTrackPositionFlag(void* imarg1, BOOL imarg2);
BOOL _wrap_FSURIAction_isTrackPosition(void* imarg1);
void _wrap_delete_FSAnnot(void* imarg1);
void* _wrap_FSAnnot_getPage(void* imarg1);
BOOL _wrap_FSAnnot_isMarkup(void* imarg1);
int _wrap_FSAnnot_getType(void* imarg1);
int _wrap_FSAnnot_getIndex(void* imarg1);
NSString * _wrap_FSAnnot_getContent(void* imarg1);
void _wrap_FSAnnot_setContent(void* imarg1, NSString * imarg2);
void* _wrap_FSAnnot_getModifiedDateTime(void* imarg1);
void _wrap_FSAnnot_setModifiedDateTime(void* imarg1, void* imarg2);
unsigned int _wrap_FSAnnot_getFlags(void* imarg1);
void _wrap_FSAnnot_setFlags(void* imarg1, unsigned int imarg2);
NSString * _wrap_FSAnnot_getUniqueID(void* imarg1);
void _wrap_FSAnnot_setUniqueID(void* imarg1, NSString * imarg2);
void* _wrap_FSAnnot_getRect(void* imarg1);
BOOL _wrap_FSAnnot_move(void* imarg1, void* imarg2);
void* _wrap_FSAnnot_getBorderInfo(void* imarg1);
void _wrap_FSAnnot_setBorderInfo(void* imarg1, void* imarg2);
unsigned int _wrap_FSAnnot_getBorderColor(void* imarg1);
void _wrap_FSAnnot_setBorderColor(void* imarg1, unsigned int imarg2);
BOOL _wrap_FSAnnot_resetAppearanceStream(void* imarg1);
void* _wrap_FSAnnot_getDeviceRect(void* imarg1, BOOL imarg2, void* imarg3);
void* _wrap_FSAnnot_getDict(void* imarg1);
BOOL _wrap_FSAnnot_removeProperty(void* imarg1,int imarg2);
void _wrap_FSBorderInfo_set(void* imarg1, float imarg2, int imarg3, float imarg4, float imarg5, NSArray * imarg6);
void _wrap_FSBorderInfo_width_set(void* imarg1, float imarg2);
float _wrap_FSBorderInfo_width_get(void* imarg1);
void _wrap_FSBorderInfo_style_set(void* imarg1, int imarg2);
int _wrap_FSBorderInfo_style_get(void* imarg1);
void _wrap_FSBorderInfo_cloudIntensity_set(void* imarg1, float imarg2);
float _wrap_FSBorderInfo_cloudIntensity_get(void* imarg1);
void _wrap_FSBorderInfo_dashPhase_set(void* imarg1, float imarg2);
float _wrap_FSBorderInfo_dashPhase_get(void* imarg1);
void _wrap_FSBorderInfo_dashes_set(void* imarg1, NSArray * imarg2);
NSMutableArray * _wrap_FSBorderInfo_dashes_get(void* imarg1);
void* _wrap_new_FSBorderInfo();
void _wrap_delete_FSBorderInfo(void* imarg1);
void _wrap_FSQuadPoints_set(void* imarg1, void* imarg2, void* imarg3, void* imarg4, void* imarg5);
void _wrap_FSQuadPoints_first_set(void* imarg1, void* imarg2);
void* _wrap_FSQuadPoints_first_get(void* imarg1);
void _wrap_FSQuadPoints_second_set(void* imarg1, void* imarg2);
void* _wrap_FSQuadPoints_second_get(void* imarg1);
void _wrap_FSQuadPoints_third_set(void* imarg1, void* imarg2);
void* _wrap_FSQuadPoints_third_get(void* imarg1);
void _wrap_FSQuadPoints_fourth_set(void* imarg1, void* imarg2);
void* _wrap_FSQuadPoints_fourth_get(void* imarg1);
void* _wrap_new_FSQuadPoints();
void _wrap_delete_FSQuadPoints(void* imarg1);
void _wrap_FSShadingColor_set(void* imarg1, unsigned int imarg2, unsigned int imarg3);
void _wrap_FSShadingColor_firstColor_set(void* imarg1, unsigned int imarg2);
unsigned int _wrap_FSShadingColor_firstColor_get(void* imarg1);
void _wrap_FSShadingColor_secondColor_set(void* imarg1, unsigned int imarg2);
unsigned int _wrap_FSShadingColor_secondColor_get(void* imarg1);
void* _wrap_new_FSShadingColor();
void _wrap_delete_FSShadingColor(void* imarg1);
NSString * _wrap_FSAnnotIconProvider_getProviderID(void* imarg1);
NSString * _wrap_FSAnnotIconProvider_getProviderVersion(void* imarg1);
BOOL _wrap_FSAnnotIconProvider_hasIcon(void* imarg1, int imarg2, NSString * imarg3);
BOOL _wrap_FSAnnotIconProvider_canChangeColor(void* imarg1, int imarg2, NSString * imarg3);
void* _wrap_FSAnnotIconProvider_getIcon(void* imarg1, int imarg2, NSString * imarg3, unsigned int imarg4);
BOOL _wrap_FSAnnotIconProvider_getShadingColor(void* imarg1, int imarg2, NSString * imarg3, unsigned int imarg4, int imarg5, void* imarg6);
float _wrap_FSAnnotIconProvider_getDisplayWidth(void* imarg1, int imarg2, NSString * imarg3);
float _wrap_FSAnnotIconProvider_getDisplayHeight(void* imarg1, int imarg2, NSString * imarg3);
void _wrap_delete_FSAnnotIconProvider(void* imarg1);
    
BOOL _wrap_FSPopup_getOpenStatus(void* imrg1);
void _wrap_FSPopup_setOpenStatus(void* imrg1, BOOL imrg2);
    
void _wrap_delete_FSMarkup(void* imarg1);
void* _wrap_FSMarkup_getPopup(void* imarg1);
void _wrap_FSMarkup_setPopup(void* imrg1, void* imrg2);
NSString * _wrap_FSMarkup_getTitle(void* imarg1);
void _wrap_FSMarkup_setTitle(void* imarg1, NSString * imarg2);
NSString * _wrap_FSMarkup_getSubject(void* imarg1);
void _wrap_FSMarkup_setSubject(void* imarg1, NSString * imarg2);
float _wrap_FSMarkup_getOpacity(void* imarg1);
void _wrap_FSMarkup_setOpacity(void* imarg1, float imarg2);
NSString * _wrap_FSMarkup_getIntent(void* imarg1);
void _wrap_FSMarkup_setIntent(void* imarg1, NSString * imarg2);
void* _wrap_FSMarkup_getCreationDateTime(void* imarg1);
void _wrap_FSMarkup_setCreationDateTime(void* imarg1, void* imarg2);
int _wrap_FSMarkup_getReplyCount(void* imarg1);
void* _wrap_FSMarkup_getReply(void* imarg1, int imarg2);
void* _wrap_FSMarkup_addReply(void* imarg1);
BOOL _wrap_FSMarkup_removeReply(void* imarg1, int imarg2);
BOOL _wrap_FSMarkup_removeAllReplies(void* imarg1);
BOOL _wrap_FSMarkup_isGrouped(void* imarg1);
void* _wrap_FSMarkup_getGroupHeader(void* imarg1);
int _wrap_FSMarkup_getGroupElementCount(void* imarg1);
void* _wrap_FSMarkup_getGroupElement(void* imarg1, int imarg2);
BOOL _wrap_FSMarkup_ungroup(void* imarg1);
int _wrap_FSMarkup_getStateAnnotCount(void* imarg1, int imarg2);
void* _wrap_FSMarkup_getStateAnnot(void* imarg1, int imarg2, int imarg3);
void* _wrap_FSMarkup_addStateAnnot(void* imarg1, int imarg2, int imarg3);
BOOL _wrap_FSMarkup_removeAllStateAnnots(void* imarg1);
void _wrap_delete_FSNote(void* imarg1);
BOOL _wrap_FSNote_getOpenStatus(void* imarg1);
void _wrap_FSNote_setOpenStatus(void* imarg1, BOOL imarg2);
NSString * _wrap_FSNote_getIconName(void* imarg1);
void _wrap_FSNote_setIconName(void* imarg1, NSString * imarg2);
void* _wrap_FSNote_getReplyTo(void* imarg1);
BOOL _wrap_FSNote_resetAppearanceStream(void* imarg1);
BOOL _wrap_FSNote_isStateAnnot(void* imarg1);
int _wrap_FSNote_getStateModel(void* imarg1);
int _wrap_FSNote_getState(void* imarg1);
void _wrap_FSNote_setState(void* imarg1, int imarg2);
void _wrap_delete_FSTextMarkup(void* imarg1);
int _wrap_FSTextMarkup_getQuadPointsCount(void* imarg1);
void* _wrap_FSTextMarkup_getQuadPoints(void* imarg1, int imarg2);
void _wrap_FSTextMarkup_setQuadPoints(void* imarg1, void* imarg2, int imarg3);
void _wrap_delete_FSHighlight(void* imarg1);
BOOL _wrap_FSHighlight_resetAppearanceStream(void* imarg1);
void _wrap_delete_FSUnderline(void* imarg1);
BOOL _wrap_FSUnderline_resetAppearanceStream(void* imarg1);
void _wrap_delete_FSStrikeOut(void* imarg1);
BOOL _wrap_FSStrikeOut_resetAppearanceStream(void* imarg1);
void _wrap_delete_FSSquiggly(void* imarg1);
BOOL _wrap_FSSquiggly_resetAppearanceStream(void* imarg1);
void _wrap_delete_FSSquare(void* imarg1);
BOOL _wrap_FSSquare_resetAppearanceStream(void* imarg1);
unsigned int _wrap_FSSquare_getFillColor(void* imarg1);
void* _wrap_FSSquare_getInnerRect(void* imarg1);
void _wrap_FSSquare_setInnerRect(void* imarg1, void * imarg2);
void _wrap_FSSquare_setFillColor(void* imarg1,unsigned int imarg2);
void _wrap_delete_FSCircle(void* imarg1);
BOOL _wrap_FSCircle_resetAppearanceStream(void* imarg1);
unsigned int _wrap_FSCircle_getFillColor(void* imarg1);
void _wrap_FSCircle_setFillColor(void* imarg1, unsigned int imarg2);
void* _wrap_FSCircle_getInnerRect(void* imarg1);
void _wrap_FSCircle_setInnerRect(void* imarg1, void* imarg2);
void _wrap_delete_FSLink(void* imarg1);
BOOL _wrap_FSLink_resetAppearanceStream(void* imarg1);
int _wrap_FSLink_getQuadPointsCount(void* imarg1);
void* _wrap_FSLink_getQuadPoints(void* imarg1, int imarg2);
int _wrap_FSLink_getHighlightingMode(void* imarg1);
void _wrap_FSLink_setQuadPoints(void* imarg1, void* imarg2, int imarg3);
void _wrap_FSLink_setHighlightingMode(void* imarg1, int imarg2);
void _wrap_FSLink_setAction(void* imarg1, void* imarg2);
void* _wrap_FSLink_getAction(void* imarg1);
BOOL _wrap_FSLink_removeAction(void* imarg1);
void _wrap_delete_FSFreeText(void* imarg1);
void* _wrap_FSFreeText_getInnerRect(void* imarg1);
BOOL _wrap_FSFreeText_resetAppearanceStream(void* imarg1);
unsigned int _wrap_FSFreeText_getFillColor(void* imarg1);
void _wrap_FSFreeText_setFillColor(void* imarg1, unsigned int imarg2);
int _wrap_FSFreeText_getAlignment(void* imarg1);
void _wrap_FSFreeText_setAlignment(void* imarg1, int imarg2);
void* _wrap_FSFreeText_getInnerRect(void* imarg1);
void _wrap_FSFreeText_setInnerRect(void* imarg1, void* imarg2);
void* _wrap_FSFreeText_getDefaultAppearance(void* imarg1);
BOOL _wrap_FSFreeText_setDefaultAppearance(void* imarg1, void* imarg2);
NSString * _wrap_FSFreeText_getCalloutLineEndingStyle(void* imarg1);
void _wrap_FSFreeText_setCalloutLineEndingStyle(void* imarg1, NSString * imarg2);
int _wrap_FSFreeText_getCalloutLinePointCount(void* imarg1);
void* _wrap_FSFreeText_getCalloutLinePoint(void* imarg1, int imarg2);
void _wrap_FSFreeText_setCalloutLinePoints(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_delete_FSFont(void* imarg1);
void* _wrap_FSFont_create(NSString* imarg1, unsigned int imarg2, int imarg3, int imarg4);
void* _wrap_FSFont_createStandard(int imarg1);
NSString * _wrap_FSFont_getName(void* imarg1);
void _wrap_delete_FSDefaultAppearance(void* imarg1);
void* _wrap_new_FSDefaultAppearance();
void _wrap_FSDefaultAppearance_set(void* imarg1, unsigned int imarg2, void* imarg3, float imarg4, unsigned int imarg5);
unsigned int _wrap_FSDefaultAppearance_flags_get(void* imarg1);
void* _wrap_FSDefaultAppearance_font_get(void* imarg1);
float _wrap_FSDefaultAppearance_fontSize_get(void* imarg1);
unsigned int _wrap_FSDefaultAppearance_textColor_get(void* imarg1);
void* _wrap_FSDefaultAppearance_textMatrix_get(void* imarg1);
void _wrap_FSDefaultAppearance_flags_set(void* imarg1, unsigned int imarg2);
void _wrap_FSDefaultAppearance_font_set(void* imarg1, void* imarg2);
void _wrap_FSDefaultAppearance_fontSize_set(void* imarg1, float imarg2);
void _wrap_FSDefaultAppearance_textColor_set(void* imarg1, unsigned int imarg2);
void _wrap_FSDefaultAppearance_textMatrix_set(void* imarg1, void* imarg2);
void _wrap_delete_FSPDFPath(void* imarg1);
void* _wrap_FSPDFPath_create();
int _wrap_FSPDFPath_getPointCount(void* imarg1);
void* _wrap_FSPDFPath_getPoint(void* imarg1, int imarg2);
int _wrap_FSPDFPath_getPointType(void* imarg1, int imarg2);
BOOL _wrap_FSPDFPath_setPoint(void* imarg1, int imarg2, void* imarg3, int imarg4);
BOOL _wrap_FSPDFPath_moveTo(void* imarg1, void* imarg2);
BOOL _wrap_FSPDFPath_lineTo(void* imarg1, void* imarg2);
BOOL _wrap_FSPDFPath_cubicBezierTo(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
BOOL _wrap_FSPDFPath_closeFigure(void* imarg1);
BOOL _wrap_FSPDFPath_removePoint(void* imarg1, int imarg2);
void _wrap_FSPDFPath_clear(void* imarg1);
void _wrap_delete_FSInk(void* imarg1);
BOOL _wrap_FSInk_resetAppearanceStream(void* imarg1);
void* _wrap_FSInk_getInkList(void* imarg1);
void _wrap_FSInk_setInkList(void* imarg1, void* imarg2);
void _wrap_delete_FSInk(void* imarg1);
void _wrap_delete_FSLine(void* imarg1);
BOOL _wrap_FSLine_resetAppearanceStream(void* imarg1);
NSString* _wrap_FSLine_getLineStartingStyle(void* imarg1);
void _wrap_FSLine_setLineStartingStyle(void* imarg1, NSString* imarg2);
NSString* _wrap_FSLine_getLineEndingStyle(void* imarg1);
void _wrap_FSLine_setLineEndingStyle(void* imarg1, NSString* imarg2);
unsigned int _wrap_FSLine_getStyleFillColor(void* imarg1);
void _wrap_FSLine_setStyleFillColor(void* imarg1, unsigned int imarg2);
void* _wrap_FSLine_getStartPoint(void* imarg1);
void _wrap_FSLine_setStartPoint(void* imarg1, void* imarg2);
void * _wrap_FSLine_getEndPoint(void* imarg1);
void _wrap_FSLine_setEndPoint(void* imarg1, void* imarg2);
BOOL _wrap_FSline_hasCaption(void* imarg1);
void _wrap_FSLine_enableCaption(void* imarg1, BOOL imarg2);
NSString* _wrap_FSLine_getCaptionPositionType(void* imarg1);
void _wrap_FSLine_setCaptionPositionType(void* imarg1, NSString* imarg2);
void* _wrap_FSLine_getCaptionOffset(void* imarg1);
void _wrap_FSLine_setCaptionOffset(void* imarg1, void* imarg2);
void _wrap_delete_FSStamp(void* imarg1);
BOOL _wrap_FSStamp_resetAppearanceStream(void* imarg1);
NSString* _wrap_FSStamp_getIconName(void* imarg1);
void _wrap_FSStamp_setIconName(void* imarg1, NSString* imarg2);
void _wrap_FSStamp_setBitmap(void* imarg1, void* imarg2);
void _wrap_FSStamp_setImagePath(void* imarg1, NSString* imarg2);
void _wrap_delete_FSPolygon(void* imarg1);
BOOL _wrap_FSPolygon_resetAppearanceStream(void* imarg1);
unsigned int _wrap_FSPolygon_getFillColor(void* imarg1);
void _wrap_FSPolygon_setFillColor(void* imarg1, unsigned int imarg2);
int _wrap_FSPolygon_getVertexCount(void* imarg1);
void* _wrap_FSPolygon_getVertex(void* imarg1,int imarg2);
void _wrap_FSPolygon_setVertexes(void* imarg1, void* imarg2, int imarg3);
void _wrap_delete_FSPolyLine(void* imarg1);
BOOL _wrap_FSPolyLine_resetAppearanceStream(void* imarg1);
unsigned int _wrap_FSPolyLine_getStyleFillColor(void* imarg1);
void _wrap_FSPolyLine_setStyleFillColor(void* imarg1, unsigned int imarg2);
int _wrap_FSPolyLine_getVertexCount(void* imarg1);
void* _wrap_FSPolyLine_getVertex(void* imarg1, int imarg2);
void _wrap_FSPolyLine_setVertexes(void* imarg1, void* imarg2, int imarg3);
NSString* _wrap_FSPolyLine_getLineStartingStyle(void* imarg1);
void _wrap_FSPolyLine_setLineStartingStyle(void* imarg1, NSString* imarg2);
NSString* _wrap_FSPolyLine_getLineEndingStyle(void* imarg1);
void _wrap_FSPolyLine_setLineEndingStyle(void* imarg1, NSString* imarg2);
void _wrap_delete_FSCaret(void* imarg1);
BOOL _wrap_FSCaret_resetAppearanceStream(void* imarg1);
void* _wrap_FSCaret_getInnerRect(void* imarg1);
void _wrap_FSCaret_setInnerRect(void* imarg1, void* imarg2);
void _wrap_delete_FSBookmark(void* imarg1);
void* _wrap_FSBookmark_getParent(void* imarg1);
void* _wrap_FSBookmark_getFirstChild(void* imarg1);
void* _wrap_FSBookmark_getNextSibling(void* imarg1);
void* _wrap_FSBookmark_insert(void* imarg1, NSString * imarg2, int imarg3);
BOOL _wrap_FSBookmark_moveTo(void* imarg1, void* imarg2, int imarg3);
void* _wrap_FSBookmark_getDestination(void* imarg1);
void _wrap_FSBookmark_setDestination(void* imarg1, void* imarg2);
NSString * _wrap_FSBookmark_getTitle(void* imarg1);
void _wrap_FSBookmark_setTitle(void* imarg1, NSString * imarg2);
unsigned int _wrap_FSBookmark_getColor(void* imarg1);
void _wrap_FSBookmark_setColor(void* imarg1, unsigned int imarg2);
unsigned int _wrap_FSBookmark_getStyle(void* imarg1);
void _wrap_FSBookmark_setStyle(void* imarg1, unsigned int imarg2);
    
NSString * _wrap_FSReadingBookmark_getTitle(void* imarg1);
void _wrap_FSReadingBookmark_setTitle(void* imarg1, NSString * imarg2);
int _wrap_FSReadingBookmark_getPageIndex(void* imarg1);
void _wrap_FSReadingBookmark_setPageIndex(void* imarg1, int pageIndex);
void _wrap_delete_FSReadingBookmark(void* imarg1);
void* _wrap_FSReadingBookmark_getDateTime(void* imarg1, BOOL imarg2);
void _wrap_FSReadingBookmark_setDateTime(void* imarg1, void* imarg2, BOOL imarg3);
    
void _wrap_FSPageLabel_set(void* imarg1, int imarg2, int imarg3, NSString * imarg4, int imarg5);
void _wrap_FSPageLabel_start_set(void* imarg1, int imarg2);
int _wrap_FSPageLabel_start_get(void* imarg1);
void _wrap_FSPageLabel_style_set(void* imarg1, int imarg2);
int _wrap_FSPageLabel_style_get(void* imarg1);
void _wrap_FSPageLabel_prefix_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSPageLabel_prefix_get(void* imarg1);
void _wrap_FSPageLabel_firstPageNumber_set(void* imarg1, int imarg2);
int _wrap_FSPageLabel_firstPageNumber_get(void* imarg1);
void* _wrap_new_FSPageLabel();
void _wrap_delete_FSPageLabel(void* imarg1);
void* _wrap_FSPDFDoc_createFromFilePath(NSString * imarg1);
void* _wrap_FSPDFDoc_createFromMemory(NSData * imarg1, int imarg2);
NSData* _wrap_FSPDFDoc_ConvertPDF2OFD(NSData * imarg1, int imarg2);
NSData* _wrap_FSPDFDoc_ConvertOFD2PDF(NSData * imarg1, int imarg2);
BOOL _wrap_FSPDFDoc_ConvertPDF2OFDFromFilePath(NSString * from, NSString * to);
BOOL _wrap_FSPDFDoc_ConvertOFD2PDFFromFilePath(NSString * from, NSString * to);
void* _wrap_FSPDFDoc_GetImageWithPassword(NSString * password, NSString * sealID);
void* _wrap_FSPDFDoc_GetSealList(NSString * password);
NSString * _wrap_FSPDFDoc_GetSeal(void* imarg1, NSString * password,NSString * sealID);
NSString * _wrap_FSPDFDoc_GetCert(void* imarg1, NSString * password,NSString * sealID);
void* _wrap_FSPDFDoc_VerifySealSignAll(void* imarg1, NSString * password);
NSString * _wrap_FSPDFDoc_IsVerify(void* imarg1, NSString * password,NSString * sealID,BOOL isVerify);

//BOOL _wrap_FSPDFDoc_SealSignBySettingNoUI(NSString * inOfd,NSString * outOfd,NSString * oesName,NSString * sealid,NSString * password,float xpos,float ypos,NSArray* range,int * subrange,NSString * key,BOOL matchcase,BOOL matchword,NSString * keyindex,int sealSigntype,int pageSealType,int startPage,int endPage,BOOL duplexPrint,int firstPagePrint,int pageSealDirection,int pageSealCoordinates);

void* _wrap_FSPDFDoc_createFromHandler(FSFileReadCallback* imarg1);
int _wrap_FSPDFDoc_load(void* imarg1, NSString * imarg2, int imarg3);
BOOL _wrap_FSPDFDoc_isEncrypted(void* imarg1);
BOOL _wrap_FSPDFDoc_isModified(void* imarg1);
int _wrap_FSPDFDoc_getPasswordType(void* imarg1);
int _wrap_FSPDFDoc_getEncryptionType(void* imarg1);
int _wrap_FSPDFDoc_checkPassword(void* imarg1, NSString * imarg2, int imarg3);
BOOL _wrap_FSPDFDoc_saveAs(void* imarg1, NSString * imarg2,unsigned int imarg3);
void* _wrap_FSPDFDoc_creatFirstBookmark(void* imarg1);
BOOL _wrap_FSPDFDoc_removeBookmark(void* imarg1, void* imarg2);
void* _wrap_FSPDFDoc_getFirstBookmark(void* imarg1);
int _wrap_FSPDFDoc_getPageCount(void* imarg1);
void* _wrap_FSPDFDoc_getPage(void* imarg1, int imarg2);
BOOL _wrap_FSPDFDoc_closePage(void* imarg1, int imarg2);
int _wrap_FSPDFDoc_getDisplayMode(void* imarg1);
void* _wrap_FSPDFDoc_getCatalog(void* imarg1);
void* _wrap_FSPDFDoc_getTrailer(void* imarg1);
void* _wrap_FSPDFDoc_getInfo(void* imarg1);
void* _wrap_FSPDFDoc_getEncryptDict(void* imarg1);
void* _wrap_FSPDFDoc_getIndirectObject(void* imarg1, unsigned int imarg2);
unsigned int _wrap_FSPDFDoc_addIndirectObject(void* imarg1, void* imarg2);
void _wrap_FSPDFDoc_deleteIndirectObject(void* imarg1, unsigned int imarg2);
unsigned int _wrap_FSPDFDoc_getUserPermissions(void* imarg1);
BOOL _wrap_FSPDFDoc_isWrapper(void* imarg1);
void* _wrap_FSPDFDoc_getWrapperData(void* imarg1);
int _wrap_FSPDFDoc_getWrapperOffset(void* imarg1);
BOOL _wrap_FSPDFDoc_hasMetadataKey(void* imarg1, NSString * imarg2);
void* _wrap_FSPDFDoc_getCreationDateTime(void* imarg1);
void* _wrap_FSPDFDoc_getModifiedDateTime(void* imarg1);
NSString * _wrap_FSPDFDoc_getMetadataValue(void* imarg1, NSString * imarg2);
int _wrap_FSPDFDoc_getPageLabelRangeCount(void* imarg1);
void* _wrap_FSPDFDoc_getPageLabelInfo(void* imarg1, int imarg2);
BOOL _wrap_FSPDFDoc_hasForm(void* imarg1);
void* _wrap_FSPDFDoc_getForm(void* imarg1);
int _wrap_FSPDFDoc_getReadingBookmarkCount(void* imarg1);
void* _wrap_FSPDFDoc_getReadingBookmark(void* imarg1, int index);
void* _wrap_FSPDFDoc_insertReadingBookmark(void* imarg1, int readingBookmarkIndex, NSString* title, int pageIndex);
BOOL _wrap_FSPDFDoc_removeReadingBookmark(void* imarg1, void* bookmark);
int _wrap_FSPDFDoc_getSignatureCount(void* imarg1);
void* _wrap_FSPDFDoc_getSignature(void* imarg1, int imarg2);
void _wrap_delete_FSPDFDoc(void* imarg1);
void* _wrap_FSPDFObject_createFromBoolean(BOOL imarg1);
void* _wrap_FSPDFObject_createFromFloat(float imarg1);
void* _wrap_FSPDFObject_createFromInteger(int imarg1);
void* _wrap_FSPDFObject_createFromString(NSString * imarg1);
void* _wrap_FSPDFObject_createFromName(NSString * imarg1);
void* _wrap_FSPDFObject_createFromDateTime(void* imarg1);
void* _wrap_FSPDFObject_createReference(void* imarg1, unsigned int imarg2);
void* _wrap_FSPDFObject_cloneObject(void* imarg1);
int _wrap_FSPDFObject_getType(void* imarg1);
unsigned int _wrap_FSPDFObject_getObjNum(void* imarg1);
int _wrap_FSPDFObject_getInteger(void* imarg1);
float _wrap_FSPDFObject_getFloat(void* imarg1);
BOOL _wrap_FSPDFObject_getBoolean(void* imarg1);
void* _wrap_FSPDFObject_getMatrix(void* imarg1);
void* _wrap_FSPDFObject_getRect(void* imarg1);
void* _wrap_FSPDFObject_getDirectObject(void* imarg1);
void* _wrap_FSPDFObject_getDateTime(void* imarg1);
NSString * _wrap_FSPDFObject_getString(void* imarg1);
void _wrap_delete_FSPDFObject(void* imarg1);
void* _wrap_new_FSPDFObject();
void* _wrap_FSPDFStream_create(void* imarg1);
void _wrap_delete_FSPDFStream(void* imarg1);
void* _wrap_FSPDFStream_getDictionary(void* imarg1);
unsigned int _wrap_FSPDFStream_getDataSize(void* imarg1, BOOL imarg2);
NSData * _wrap_FSPDFStream_getData(void* imarg1, BOOL imarg2, int imarg4);
void _wrap_FSPDFStream_setData(void* imarg1, NSData * imarg2, unsigned int imarg3);
void* _wrap_new_FSPDFStream();
void* _wrap_FSPDFArray_create();
void* _wrap_FSPDFArray_createFromMatrix(void* imarg1);
void* _wrap_FSPDFArray_createFromRect(void* imarg1);
void _wrap_delete_FSPDFArray(void* imarg1);
int _wrap_FSPDFArray_getElementCount(void* imarg1);
void* _wrap_FSPDFArray_getElement(void* imarg1, int imarg2);
void _wrap_FSPDFArray_addElement(void* imarg1, void* imarg2);
void _wrap_FSPDFArray_insertAt(void* imarg1, int imarg2, void* imarg3);
void _wrap_FSPDFArray_setAt(void* imarg1, int imarg2, void* imarg3);
void _wrap_FSPDFArray_removeAt(void* imarg1, int imarg2);
void* _wrap_new_FSPDFArray();
void* _wrap_FSPDFDictionary_create();
void _wrap_delete_FSPDFDictionary(void* imarg1);
BOOL _wrap_FSPDFDictionary_hasKey(void* imarg1, NSString * imarg2);
void* _wrap_FSPDFDictionary_getElement(void* imarg1, NSString * imarg2);
NSString * _wrap_FSPDFDictionary_getKey(void* imarg1, void* imarg2);
void* _wrap_FSPDFDictionary_getValue(void* imarg1, void* imarg2);
void* _wrap_FSPDFDictionary_moveNext(void* imarg1, void* imarg2);
void _wrap_FSPDFDictionary_setAt(void* imarg1, NSString * imarg2, void* imarg3);
void _wrap_FSPDFDictionary_removeAt(void* imarg1, NSString * imarg2);
void* _wrap_new_FSPDFDictionary();
void _wrap_delete_FSPDFPage(void* imarg1);
void* _wrap_FSPDFPage_getDocument(void* imarg1);
void* _wrap_FSPDFPage_getDict(void* imarg1);
BOOL _wrap_FSPDFPage_isParsed(void* imarg1);
int _wrap_FSPDFPage_startParse(void* imarg1, unsigned int imarg2, FSPauseCallback* imarg3, BOOL imarg4);
int _wrap_FSPDFPage_continueParse(void* imarg1);
int _wrap_FSPDFPage_getIndex(void* imarg1);
float _wrap_FSPDFPage_getHeight(void* imarg1);
float _wrap_FSPDFPage_getWidth(void* imarg1);
int _wrap_FSPDFPage_getRotation(void* imarg1);
void* _wrap_FSPDFPage_loadThumbnail(void* imarg1);
void* _wrap_FSPDFPage_getDisplayMatrix(void* imarg1, int imarg2, int imarg3, int imarg4, int imarg5, int imarg6);
void* _wrap_FSPDFPage_calcContentBBox(void* imarg1, int imarg2);
int _wrap_FSPDFPage_getAnnotCount(void* imarg1);
void* _wrap_FSPDFPage_getAnnot(void* imarg1, int imarg2);
void* _wrap_FSPDFPage_getAnnotAtPos(void* imarg1, void* imarg2, float imarg3);
void* _wrap_FSPDFPage_getAnnotAtDevicePos(void* imarg1, void* imarg2, void* imarg3, float imarg4);
void* _wrap_FSPDFPage_addAnnot(void* imarg1, int imarg2, void* imarg3);
BOOL _wrap_FSPDFPage_removeAnnot(void* imarg1, void* imarg2);
BOOL _wrap_FSPDFPage_hasTransparency(void* imarg1);
BOOL _wrap_FSPDFPage_flatten(void* imarg1,BOOL isDisplay, unsigned int options);
BOOL _wrap_FSPDFPage_setAnnotGroup(void* imarg1, void** imarg2, int imarg3, int imarg4);
void* _wrap_FSPDFPage_addSignature(void* imarg1, void* imarg2);
void* _wrap_FSBitmap_create(int imarg1, int imarg2, int imarg3, unsigned char * imarg4, int imarg5);
void _wrap_delete_FSBitmap(void* imarg1);
void* _wrap_FSBitmap_clone(void* imarg1, void* imarg2);
int _wrap_FSBitmap_getWidth(void* imarg1);
int _wrap_FSBitmap_getHeight(void* imarg1);
int _wrap_FSBitmap_getPitch(void* imarg1);
int _wrap_FSBitmap_getBpp(void* imarg1);
NSData * _wrap_FSBitmap_getBuffer(void* imarg1);
int _wrap_FSBitmap_getFormat(void* imarg1);
void _wrap_FSBitmap_fillRect(void* imarg1, unsigned int imarg2, void* imarg3);
void* _wrap_FSRenderer_create(void* imarg1, BOOL imarg2);
void* _wrap_FSRenderer_createFromContext(CGContextRef imarg1, int imarg2);
int _wrap_FSRenderer_startRender(void* imarg1, void* imarg2, void* imarg3, FSPauseCallback* imarg4);
int _wrap_FSRenderer_continueRender(void* imarg1);
BOOL _wrap_FSRenderer_renderAnnot(void* imarg1, void* imarg2, void* imarg3);
void _wrap_FSRenderer_setRenderContent(void* imarg1, unsigned int imarg2);
void _wrap_FSRenderer_setTransformAnnotIcon(void* imarg1, BOOL imarg2);
void _wrap_FSRenderer_setColorMode(void* imarg1, int imarg2);
void _wrap_FSRenderer_setMappingModeColors(void* imarg1, unsigned int imarg2, unsigned int imarg3);
void _wrap_FSRenderer_setClearType(void* imarg1, BOOL imarg2);
void _wrap_FSRenderer_setPrintGraphicText(void* imarg1, BOOL imarg2);
void _wrap_FSRenderer_setForceDownSample(void* imarg1, BOOL imarg2);
void _wrap_FSRenderer_setForceHalftone(void* imarg1, BOOL imarg2);
void _wrap_delete_FSRenderer(void* imarg1);
void* _wrap_FSPDFTextSearch_create(void* imarg1, FSPauseCallback* imarg2);
BOOL _wrap_FSPDFTextSearch_setKeyWords(void* imarg1, NSString * imarg2);
BOOL _wrap_FSPDFTextSearch_setStartPage(void* imarg1, int imarg2);
BOOL _wrap_FSPDFTextSearch_setFlag(void* imarg1, unsigned int imarg2);
BOOL _wrap_FSPDFTextSearch_findNext(void* imarg1);
BOOL _wrap_FSPDFTextSearch_findPrev(void* imarg1);
int _wrap_FSPDFTextSearch_getMatchRectCount(void* imarg1);
void* _wrap_FSPDFTextSearch_getMatchRect(void* imarg1, int imarg2);
int _wrap_FSPDFTextSearch_getMatchPageIndex(void* imarg1);
NSString * _wrap_FSPDFTextSearch_getMatchSentence(void* imarg1);
int _wrap_FSPDFTextSearch_getMatchSentenceStartIndex(void* imarg1);
int _wrap_FSPDFTextSearch_getMatchStartCharIndex(void* imarg1);
int _wrap_FSPDFTextSearch_getMatchEndCharIndex(void* imarg1);
void _wrap_delete_FSPDFTextSearch(void* imarg1);
void* _wrap_FSPDFTextSelect_create(void* imarg1);
void* _wrap_FSPDFTextSelect_getPage(void* imarg1);
int _wrap_FSPDFTextSelect_getCharCount(void* imarg1);
NSString * _wrap_FSPDFTextSelect_getChars(void* imarg1, int imarg2, int imarg3);
int _wrap_FSPDFTextSelect_getIndexAtPos(void* imarg1, float imarg2, float imarg3, float imarg4);
NSString * _wrap_FSPDFTextSelect_getTextInRect(void* imarg1, void* imarg2);
BOOL _wrap_FSPDFTextSelect_getWordAtPos(void* imarg1, float imarg2, float imarg3, float imarg4, int * imarg5, int * imarg6);
int _wrap_FSPDFTextSelect_getTextRectCount(void* imarg1, int imarg2, int imarg3);
void* _wrap_FSPDFTextSelect_getTextRect(void* imarg1, int imarg2);
int _wrap_FSPDFTextSelect_getBaselineRotation(void* imarg1, int imarg2);
void _wrap_delete_FSPDFTextSelect(void* imarg1);
void _wrap_delete_FSPDFTextLink(void* imarg1);
NSString * _wrap_FSPDFTextLink_getURI(void* imarg1);
int _wrap_FSPDFTextLink_getStartCharIndex(void* imarg1);
int _wrap_FSPDFTextLink_getEndCharIndex(void* imarg1);
int _wrap_FSPDFTextLink_getRectCount(void* imarg1);
void* _wrap_FSPDFTextLink_getRect(void* imarg1, int imarg2);
void* _wrap_FSPDFPageLinks_create(void* imarg1);
int _wrap_FSPDFPageLinks_getTextLinkCount(void* imarg1);
void* _wrap_FSPDFPageLinks_getTextLink(void* imarg1, int imarg2);
int _wrap_FSPDFPageLinks_getLinkAnnotCount(void* imarg1);
void* _wrap_FSPDFPageLinks_getLinkAnnot(void* imarg1, int imarg2);
void _wrap_delete_FSPDFPageLinks(void* imarg1);
int _wrap_FSForm_getFieldCount(void* imarg1, NSString * imarg2);
void* _wrap_FSForm_getField(void* imarg1, NSString * imarg2, int imarg3);
void* _wrap_FSForm_getFormFiller(void* imarg1);
BOOL _wrap_FSForm_reset(void* imarg1);
BOOL _wrap_FSForm_exportToXML(void* imarg1, NSString * imarg2);
BOOL _wrap_FSForm_importFromXML(void* imarg1, NSString * imarg2);
void _wrap_delete_FSForm(void* imarg1);
int _wrap_FSFormField_getType(void* imarg1);
int _wrap_FSFormField_getFlags(void* imarg1);
NSString * _wrap_FSFormField_getName(void* imarg1);
NSString * _wrap_FSFormField_getDefaultValue(void* imarg1);
NSString * _wrap_FSFormField_getValue(void* imarg1);
int _wrap_FSFormField_getControlCount(void* imarg1, void* imarg2);
void* _wrap_FSFormField_getControl(void* imarg1, void* imarg2, int imarg3);
void _wrap_delete_FSFormField(void* imarg1);
void* _wrap_FSFormControl_getField(void* imarg1);
void _wrap_delete_FSFormControl(void* imarg1);
void* _wrap_FSFormFillerAssist_init(id obj);
void _wrap_delete_FSFormFillerAssist(void* imarg1);
int _wrap_FSFormFillerAssist_getVersion(void* imarg1);
void FSFormFillerAssist_refresh(id formFillerAssist, void* page, void* pdfRect);
void _wrap_FSFormFillerAssist_refresh(void* imarg1, void* imarg2, void* imarg3);
BOOL _wrap_FSFormFillerAssist_setTimer(void* imarg1, int imarg2, FS_CALLBACK_TIMER imarg3, int * imarg4);
BOOL _wrap_FSFormFillerAssist_killTimer(void* imarg1, int imarg2);
void FSFormFillerAssist_focusGotOnControl(id formFillerAssist, void* control, const char* fieldValue);
void _wrap_FSFormFillerAssist_focusGotOnControl(void* imarg1, void* imarg2, NSString * imarg3);
void FSFormFillerAssist_focusLostFromControl(id formFillerAssist, void* control, const char* fieldValue);
void _wrap_FSFormFillerAssist_focusLostFromControl(void* imarg1, void* imarg2, NSString * imarg3);
void _wrap_FSIdentityProperties_set(void* imarg1, NSString * imarg2, NSString * imarg3, NSString * imarg4, NSString * imarg5);
void _wrap_FSIdentityProperties_corporation_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSIdentityProperties_corporation_get(void* imarg1);
void _wrap_FSIdentityProperties_email_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSIdentityProperties_email_get(void* imarg1);
void _wrap_FSIdentityProperties_loginName_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSIdentityProperties_loginName_get(void* imarg1);
void _wrap_FSIdentityProperties_name_set(void* imarg1, NSString * imarg2);
NSString * _wrap_FSIdentityProperties_name_get(void* imarg1);
void* _wrap_new_FSIdentityProperties();
void _wrap_delete_FSIdentityProperties(void* imarg1);
void* _wrap_FSActionHandler_init(id obj);
void _wrap_delete_FSActionHandler(void* imarg1);
int _wrap_FSActionHandler_getCurrentPage(void* imarg1, void* imarg2);
int FSActionHandler_getCurrentPage(id actionHandler, void* pdfDoc);
void _wrap_FSActionHandler_setCurrentPage(void* imarg1, void* imarg2, int imarg3);
void FSActionHandler_setCurrentPage(id actionHandler, void* pdfDoc, int pageIndex);
int _wrap_FSActionHandler_getPageRotation(void* imarg1, void* imarg2, int imarg3);
int FSActionHandler_getPageRotation(id actionHandler, void* pdfDoc, int pageIndex);
BOOL _wrap_FSActionHandler_setPageRotation(void* imarg1, void* imarg2, int imarg3, int imarg4);
BOOL FSActionHandler_setPageRotation(id actionHandler, void* pdfDoc, int pageIndex, int pageRotation);
int _wrap_FSActionHandler_alert(void* imarg1, NSString * imarg2, NSString * imarg3, int imarg4, int imarg5);
int FSActionHandler_alert(id actionHandler, NSString* msg, NSString* title, int type, int icon);
void* _wrap_FSActionHandler_getIdentityProperties(void* imarg1);
void* _wrap_FSFormFiller_create(void* imarg1, void* imarg2);
void _wrap_delete_FSFormFiller(void* imarg1);
void _wrap_FSFormFiller_render(void* imarg1, void* imarg2, void* imarg3, void* imrg4);
BOOL _wrap_FSFormFiller_tap(void* imarg1, void* imarg2, void* imarg3);
BOOL _wrap_FSFormFiller_input(void* imarg1, unsigned int imarg2);
void _wrap_FSFormFiller_highlightFormFields(void* imarg1, BOOL imarg2);
void _wrap_FSFormFiller_setHighlightColor(void* imarg1, unsigned int imarg2);

void _wrap_delete_FSFileSpec(void* imarg1);
void* _wrap_FSFileSpec_create(void* imarg1);
NSString * _wrap_FSFileSpec_getFileName(void* imarg1);
void _wrap_FSFileSpec_setFileName(void* imarg1, NSString * imarg2);
long long _wrap_FSFileSpec_getFileSize(void* imarg1);
void* _wrap_FSFileSpec_getFileData(void* imarg1);
BOOL _wrap_FSFileSpec_embed(void* imarg1, NSString * imarg2);
BOOL _wrap_FSFileSpec_isEmbedded(void* imarg1);
NSString * _wrap_FSFileSpec_getDescription(void* imarg1);
void _wrap_FSFileSpec_setDescription(void* imarg1, NSString * imarg2);
void* _wrap_FSFileSpec_getCreationDateTime(void* imarg1);
void _wrap_FSFileSpec_setCreationDateTime(void* imarg1, void* imarg2);
void* _wrap_FSFileSpec_getModifiedDateTime(void* imarg1);
void _wrap_FSFileSpec_setModifiedDateTime(void* imarg1, void* imarg2);
NSData * _wrap_FSFileSpec_getChecksum(void* imarg1);
void _wrap_FSFileSpec_setChecksum(void* imarg1, NSData * imarg2);

void _wrap_delete_FSFileAttachment(void* imarg1);
BOOL _wrap_FSFileAttachment_resetAppearanceStream(void* imarg1);
BOOL _wrap_FSFileAttachment_setFileSpec(void* imarg1, void* imarg2);
void* _wrap_FSFileAttachment_getFileSpec(void* imarg1);
NSString * _wrap_FSFileAttachment_getIconName(void* imarg1);
void _wrap_FSFileAttachment_setIconName(void* imarg1, NSString * imarg2);

BOOL _wrap_FSSignature_isSigned(void* imarg1);
int _wrap_FSSignature_startSign(void* imarg1, NSString * imarg2, NSString* imarg3, NSString* imarg4, int imarg5, void* imarg6, void* imarg7);
int _wrap_FSSignature_continueSign(void* imarg1);
int _wrap_FSSignature_startVerify(void* imarg1, void* imarg2, void* imrg3);
int _wrap_FSSignature_continueVerify(void* imarg1);
unsigned int _wrap_FSSignature_getState(void* imarg1);
BOOL _wrap_FSSignature_clearSignedData(void* imarg1);
void* _wrap_FSSignature_getDocument(void* imarg1);
unsigned int _wrap_FSSignature_getAppearanceFlags(void* imarg1);
void _wrap_FSSignature_setAppearanceFlags(void* imarg1, unsigned int imarg2);
void* _wrap_FSSignature_getSigningTime(void* imarg1);
void _wrap_FSSignature_setSigningTime(void* imarg1, void* imarg2);
NSString * _wrap_FSSignature_getKeyValue(void* imarg1, int imarg2);
void _wrap_FSSignature_setKeyValue(void* imarg1, int imarg2, NSString * imarg3);
void* _wrap_FSSignature_getBitmap(void* imarg1);
void _wrap_FSSignature_setBitmap(void* imarg1, void* imarg2);
void _wrap_FSSignature_setImagePath(void* imarg1, NSString* imarg2);
void _wrap_FSSignature_setSignerCertPath(void* imarg1, NSString * imarg2, NSString * imarg3, int imarg4);
void* _wrap_FSSignature_getSignatureDict(void* imarg1);
void _wrap_FSSignature_setAppearanceContent(void* imarg1, NSString * imarg2);
void _wrap_FSSignature_setSignatureHandler(void* imarg1, void* imarg2);
void _wrap_delete_FSSignature(void* imarg1);

#ifdef __cplusplus
}
#endif

#endif

&